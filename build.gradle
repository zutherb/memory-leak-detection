apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

test.onlyIf { !Boolean.getBoolean('skip.tests') }

tasks.withType(Compile) {
    options.compilerArgs << "-Xlint:unchecked -Xlint:deprecation"
}

group = 'com.comsysto'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

//load version from the root folder
def props = new Properties();
file("gradle.properties").withInputStream { props.load(it) }
props.each({ project.ext[it.key] = it.value })

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        maven{url 'http://maven.springsource.org/release'}
        maven{url 'http://repo.springsource.org/milestone'}
        maven{url 'http://maven.restlet.org'}
    }

    configurations {
        all {
            resolutionStrategy.failOnVersionConflict()
            resolutionStrategy {
                force "org.springframework:spring-aop:$springVersion",
                        "org.springframework:spring-beans:$springVersion",
                        "org.springframework:spring-context:$springVersion",
                        "org.springframework:spring-context-support:$springVersion",
                        "org.springframework:spring-core:$springVersion",
                        "org.springframework:spring-expression:$springVersion",
                        "org.springframework:spring-tx:$springVersion",
                        "org.springframework:spring-web:$springVersion",
                        "org.mongodb:mongo-java-driver:$mongodbDriverVersion",
                        "org.mongodb:bson:$mongodbDriverVersion",
                        "commons-beanutils:commons-beanutils:$commonsBeanUtilsVersion",
                        "commons-logging:commons-logging:$commonsLoggingVersion",
                        "commons-codec:commons-codec:$commonsCodecsVersion",
                        "commons-httpclient:commons-httpclient:$commonsHttpClientVersion",
                        "commons-io:commons-io:$commonsIoVersion",
                        "commons-pool:commons-pool:$commonsPoolVersion",
                        "commons-cli:commons-cli:$commonsCliVersion",
                        "commons-lang:commons-lang:$commonsLangVersion",
                        "org.apache.commons:commons-math:$commonsMathVersion",
                        "com.google.guava:guava:$guavaVersion",
                        "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion",
                        "org.codehaus.jackson:jackson-core-asl:$jacksonVersion",
                        "com.github.stephenc.high-scale-lib:high-scale-lib:$stephecHighScaleVersion",
                        "xml-apis:xml-apis:$xmlApisVersion",
                        "junit:junit:$junitVersion",
                        "org.slf4j:slf4j-api:$slf4jVersion",
                        "ch.qos.logback:logback-classic:$logbackVersion",
                        "com.github.fakemongo:fongo:$fongoVersion",
                        "org.hamcrest:hamcrest-core:1.3",
                        "org.objenesis:objenesis:1.2",
                        "xerces:xercesImpl:2.11.0",
                        "xml-apis:xml-apis:1.4.01",
                        "cglib:cglib-nodep:2.2",
                        "org.apache.httpcomponents:httpclient:4.2.1",
                        "org.codehaus.groovy:groovy-all:2.1.3",
                        "org.slf4j:jcl-over-slf4j:1.7.6"
            }
        }

        all*.exclude group: "org.mortbay.jetty"
        all*.exclude group: "tomcat"

        all*.exclude module: "slf4j-log4j12"
        all*.exclude module: "jcl-over-slf4"
        all*.exclude module: "log4j"
    }

    ext.commonDeps = [
            "org.slf4j:slf4j-api:$slf4jVersion",
            "ch.qos.logback:logback-classic:$logbackVersion",
            "org.codehaus.groovy:groovy-all:$groovyVersion", // required for logback logger
            "commons-collections:commons-collections:$commonsCollectionsVersion",
            "commons-io:commons-io:$commonsIoVersion",
            "org.reflections:reflections:$reflectionsVersion",
            "net.sf.dozer:dozer:$dozerVersion",
            "net.sf.opencsv:opencsv:$opencsvVersion",
            "joda-time:joda-time:$jodaTimeVersion",
    ]

    ext.webAppDeps = [
            "javax.servlet:javax.servlet-api:3.0.1",
    ]

    ext.mongoDeps = [
            "org.mongodb:mongo-java-driver:$mongodbDriverVersion",
            "org.mongodb:bson:$mongodbDriverVersion",
    ]

    ext.springDeps = [
            "org.springframework:spring-core:$springVersion",
            "org.springframework.security:spring-security-core:$springSecurityVersion",
            "org.springframework.security:spring-security-web:$springSecurityVersion",
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.mobile:spring-mobile-device:$springMobileVersion",
            "org.springframework.data:spring-data-mongodb:$springDataMongoVersion",
            "org.springframework.data:spring-data-hadoop:$springDataHadoopVersion",

    ]

    ext.wicketDeps = [
            "org.apache.wicket:wicket-core:$wicketVersion",
            "org.apache.wicket:wicket-spring:$wicketVersion",
            "org.apache.wicket:wicket-extensions:$wicketVersion",
            "org.apache.wicket:wicket-datetime:$wicketVersion",
            "org.wicketstuff:wicketstuff-annotation:$wicketstuffVersion"
    ]

    ext.jettyDeps = [
            "org.eclipse.jetty.aggregate:jetty-all-server:$jettyVersion",
            "org.eclipse.jetty.orbit:javax.servlet:3.0.0.v201112011016@jar",
            "org.eclipse.jetty:jetty-continuation:$jettyVersion",
            "org.eclipse.jetty:jetty-http:$jettyVersion",
    ]

    ext.testDeps = [
            "org.springframework:spring-test:$springVersion",
            "junit:junit:$junitVersion",
            "org.mockito:mockito-all:$mockitoVersion",
            "com.github.fakemongo:fongo:$fongoVersion",
            "com.lordofthejars:nosqlunit-mongodb:$nosqlunitVersion",
    ]
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}